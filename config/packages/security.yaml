security:
    encoders:
        App\Entity\User: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        database_provider:
            entity: { class: App\Entity\User, property: email }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            # pattern: ^/
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            form_login:
                check_path: app_login
                login_path: app_login
                default_target_path: team
                always_use_default_target_path: true
                csrf_token_generator: security.csrf.token_manager
            logout:
                path:   app_logout
                target: home
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000
            switch_user: true
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_ALLOWED_TO_SWITCH]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN]
        ROLE_OWNER:       [ROLE_USER, ROLE_ADMIN, ROLE_SUPER_ADMIN, ROLE_ALLOWED_TO_SWITCH]


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, allow_if: "!is_granted('ROLE_USER') or is_remember_me()" }
        - { path: ^/register, allow_if: "!is_granted('ROLE_USER')" }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/player, roles: ROLE_USER }
